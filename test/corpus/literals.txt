=====================================
Integers
=====================================

-1
1i
-1u
1_1
0x01

---

(module
  (block (operator (op) (integer)))
  (block (integer))
  (block (operator (op) (integer)))
  (block (integer))
  (block (integer)))

=====================================
Floats
=====================================

-0.6_6
+0.1_1
123.4123
123.123d
1_1.3_1
1_1.0
1e+3_4
0.3e1_4
1_0.0f
0f

---

(module
  (block (operator (op) (float)))
  (block (operator (op) (float)))
  (block (float))
  (block (float))
  (block (float))
  (block (float))
  (block (float))
  (block (float))
  (block (float))
  (block (float)))


=====================================
Scientific Notation Floats
=====================================

1.0e322
1.0e-3
1.0e+3
1.8e10
1.0e10
-1.0e10

---

(module
  (block (float))
  (block (float))
  (block (float))
  (block (float))
  (block (float))
  (block (operator (op) (float))))

=====================================
Strings
=====================================

"I'm ok"
'"ok"'
UR'bye'
b'sup'
B"sup"
`1`
"\\"
"/"
"multiline \
string"
b"\x12\u12\U12\x13\N{WINKING FACE}"
"\xab\123\'\"\a\b\f\r\n\t\v\\"
"\xgh\o123\p\q\c\d\e\u12\U1234"

---

(module
  (block (string))
  (block (string))
  (block (string))
  (block (string))
  (block (string))
  (block (string))
  (block (string (escape_sequence)))
  (block (string))
  (block (string (escape_sequence)))
  (block (string (escape_sequence) (escape_sequence)))
  (block (string (escape_sequence) (escape_sequence) (escape_sequence) (escape_sequence) (escape_sequence) (escape_sequence) (escape_sequence) (escape_sequence) (escape_sequence) (escape_sequence) (escape_sequence) (escape_sequence)))
  (block (string)))

=====================================
Raw strings
=====================================

'ab\x00cd'
"\n"

# no escape sequences in these
r'ab\x00cd'
ur"\n"

---

(module
  (block (string (escape_sequence)))
  (block (string (escape_sequence)))
  (comment)
  (block (string))
  (block (string)))

=====================================
Raw strings with escaped quotes
=====================================

re.compile(r"(\n|\A)#include\s*['\"]" &
           r"(?P<name>[\w\d./\\]+[.]src)['\"]")

---

(module
  (block
    (call
      (attribute (identifier) (op) (identifier))
      (argument_list
        (operator (string) (op) (string))))))

=====================================
Format strings
=====================================

# nested!
f"a {b(f'c {e} d')} e"
f"a {{}} e"

---

(module
  (comment)
  (block (string
    (interpolation
      (call
        (identifier)
        (argument_list
          (string (interpolation
            (identifier))))))))
  (block (string)))

======================================
Format strings with format specifiers
======================================

f"a {b:2} {c:34.5}"
f"{b:{c.d}.{d.e}}"

---

(module
  (block
    (string
      (interpolation (identifier) (format_specifier (op)))
      (interpolation (identifier) (format_specifier (op)))))
  (block
    (string
      (interpolation
        (identifier)
        (format_specifier (op)
          (format_expression (attribute (identifier) (op) (identifier)))
          (format_expression (attribute (identifier) (op) (identifier))))))))

=====================================
Unicode escape sequences
=====================================

"\x12 \123 \u1234"

---

(module
  (block (string
    (escape_sequence)
    (escape_sequence)
    (escape_sequence))))

=====================================
Other primitives
=====================================

true
false
nil

---

(module
  (block (true))
  (block (false))
  (block (none)))

=====================================
Concatenated strings
=====================================

"one" & "two" & "three"

---

(module
  (block
    (operator
      (operator
        (string)
        (op)
        (string))
      (op)
      (string))))

=====================================
Multi-line strings
=====================================

"""
A double quote hello,
without double or single quotes.
"""

"""
A double quote "hello",
with double quotes.
"""

"""
A double quote 'hello',
with single quotes.
"""

'''
A single quote hello,
without double or single quotes.
'''

'''
A single quote 'hello',
with single quotes.
'''

'''
A single quote "hello",
with double quotes.
'''

"""
A double quote hello\n\
with an escaped newline\n\
and another escaped newline\n\
"""

---

(module
  (block (string))
  (block (string))
  (block (string))
  (block (string))
  (block (string))
  (block (string))
  (block (string
    (escape_sequence)
    (escape_sequence)
    (escape_sequence)
    (escape_sequence)
    (escape_sequence)
    (escape_sequence))))

=====================================
Lists
=====================================

[a, b, [c, d]]

---

(module
  (block
    (list
      (identifier) (op)
      (identifier) (op)
      (list
        (identifier) (op)
        (identifier)))))


=====================================
Dictionaries
=====================================

{a: 1, b: 2}
{}

---

(module
  (block
    (dictionary
      (pair (identifier) (op) (integer)) (op)
      (pair (identifier) (op) (integer))))
  (block
    (dictionary)))


=====================================
Sets
=====================================

{a, b, c,}

---

(module
  (block (set (identifier) (op) (identifier) (op) (identifier) (op))))

=====================================
Tuples
=====================================

()
(a, b)
(a, b, c,)
(print, exec)
(a: 1, b: 2)

---

(module
  (block (tuple))
  (block (tuple (identifier) (op) (identifier)))
  (block (tuple (identifier) (op) (identifier) (op) (identifier) (op)))
  (block (tuple (identifier) (op) (identifier)))
  (block (tuple (pair (identifier) (op) (integer)) (op) (pair (identifier) (op) (integer)))))

